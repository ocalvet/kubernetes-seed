kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: users-storage
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: users
spec:
  type: LoadBalancer
  selector:
    app: users
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: users
spec:
  serviceName: "users"
  replicas: 3
  template:
    metadata:
      labels:
        role: mongo
        app: users
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: users-api
          image: gcr.io/ncci-k8s/users-service
          resources:
            requests:
              cpu: 20m
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
          env:
            - name: DB_URL
              value: "mongodb://localhost:27017/?replicaSet=usersrs"
        - name: users-mongo
          image: mongo
          resources:
            requests:
              cpu: 20m
          command:
            - mongod
            - "--replSet"
            - usersrs
            - "--bind_ip"
            - 0.0.0.0
            - "--smallfiles"
            - "--noprealloc"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: users-persistent-storage
              mountPath: /data/db
        - name: users-mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          resources:
            requests:
              cpu: 20m
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,app=users"
            - name: KUBERNETES_MONGO_SERVICE_NAME
              value: "users"
  volumeClaimTemplates:
  - metadata:
      name: users-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "users-storage"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 3Gi